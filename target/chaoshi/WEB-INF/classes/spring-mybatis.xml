<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--扫描所有的包-->
    <context:component-scan base-package="com.qianfeng"></context:component-scan>
    <!--导入spring-mvc.xml-->
    <import resource="classpath:spring-mvc.xml"/>
    <!--配置druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/discrete?useUnicode=true&amp;useSSL=false&amp;characterEncoding=UTF-8"></property>
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
    </bean>
    <!--配置sqlsessionnFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--配置mapper文件所在位置-->
        <property name="mapperLocations" value="classpath:mappers/*.xml"></property>
        <!--单独的mybatis配置文件用来补充我mybatis没配的东西-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
    <!--mapper扫描配置器：配置dao接口所在的包，会帮助我们自动生成对应虚拟实现类，
    建立实现类与对应的mapper文件的联系-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.qianfeng.dao"></property>

        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!--配置事务管理器:spring-jdbc的事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置注解驱动式  声明事务管理-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
